<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2015.2.2 (Build 805U)" ts="2016-08-27 08:28:03">
<Class name="EasyCSP.Model.Models.Documentation">
<ClassType>persistent</ClassType>
<Language>cache</Language>
<ProcedureBlock>1</ProcedureBlock>
<SqlRowIdPrivate>1</SqlRowIdPrivate>
<Super>%Persistent,EasyCSP.Model.MVBase</Super>
<TimeChanged>64150,80000.814281</TimeChanged>
<TimeCreated>64143,38230.117249</TimeCreated>
<Inheritance>right</Inheritance>

<Parameter name="MVAUTOLOCK">
<Default>0</Default>
</Parameter>

<Parameter name="MVCLEARDICT">
<Default>0</Default>
</Parameter>

<Parameter name="MVCREATE">
<Type>BOOLEAN</Type>
<Default>0</Default>
</Parameter>

<Parameter name="MVFILENAME">
<Description>
Do not modify MVFILENAME if the file already exists.</Description>
<Type>STRING</Type>
<Default>DOCUMENTATION</Default>
</Parameter>

<Parameter name="MVREPOPULATE">
<Default>1</Default>
</Parameter>

<Property name="classId">
<Description>
Item ID</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="0"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Abstract">
<Description>
Specifies that the class cannot have instances; for datatypes, specifies that the class cannot be used as an attribute type.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="1"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Ancestry">
<Description>
Ancestry</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="2"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="CacheVersion">
<Description>
The version of Cache this class was compiled on.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="3"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClassCompileError">
<Description>
Status code from this class compile if there is an error</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="4"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClassDefinitionError">
<Description>
Set to true if there is a problem serializing the class so the compiler knows not to compile this.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="5"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClassType">
<Description>
Specifies how this class is to be used.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="6"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Classes">
<Description>
Array of items generated by this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="7"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClientDataType">
<Description>
In the case of a datatype class, specifies the type used when exposed via ActiveX or Java. Datatype classes must specify a client datatype. </Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="8"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClientDataTypeEnum">
<Description>
ClientDataTypeEnum</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="9"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClientInfo">
<Description>
ClientInfo</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="10"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ClientName">
<Description>
This gives an alternate name for the class if it projected, for example, to Java.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="11"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="CompilationSignature">
<Description>
CompilationSignature</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="12"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="CompileAfter">
<Description>
Indicates that the class compiler should compile this class after the specified classes.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="13"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="CompileNamespace">
<Description>
The namespace when this class is compiled, used to help dependency checking.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="14"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ConstraintClass">
<Description>
Additional constraint member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="15"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="DdlAllowed">
<Description>
In the case of a persistent class, indicates whether or not DDL statements can be used to alter or delete the class definition. </Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="16"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="DependsOn">
<Description>
List of classes that this class depends on being runable in order for this class to compile.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="17"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Deployed">
<Description>
Indicates whether the class has been deployed, that is, disassociated from the source that was used to build it.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="18"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Description">
<Description>
Specifies a description of the class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="19"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="DisableIncremental">
<Description>
If true then do not allow incremental compiler of this class</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="20"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Dynamic">
<Description>
Deprecated.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="21"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="EmbeddedClass">
<Description>
If specified in a member type class is the name of the class which forms the embedded superclass</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="22"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Extents">
<Description>
Extents</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="23"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Final">
<Description>
Specifies that the class cannot have subclasses.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="24"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="GeneratedBy">
<Description>
If this class is generated by some other component then this is the name of the item that generated this class</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="25"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="HasCPP">
<Description>
True if this class has C++ methods.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="26"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Hash">
<Description>
A hash of this class so we can detect when it is changed.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="27"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Hidden">
<Description>
Specifies that this class is not typically listed when viewing the contents of the class dictionary.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="28"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Import">
<Description>
Supplies a list of class packages to import for this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="29"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Importall">
<Description>
Importall</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="30"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="IncludeCode">
<Description>
Specifies an optional list of Cache include files used when compiling this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="31"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="IncludeCodeAll">
<Description>
IncludeCodeAll</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="32"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="IncludeGenerator">
<Description>
Specifies an optional list of Cache include files used when compiling the method generator methods of this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="33"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="IncludeMGenAll">
<Description>
IncludeMGenAll</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="34"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="IndexClass">
<Description>
Additional index member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="35"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Inheritance">
<Description>
Define the inheritance order when using multiple inheritance, if a member exists in multiple superclasses which one will take precedence.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="36"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="InitialValue">
<Description>
If specified the initial serial value for a new object</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="37"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="KeywordError">
<Description>
KeywordError</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="38"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="KeywordModified">
<Description>
KeywordModified</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="39"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Language">
<Description>
The default language used to implement methods for this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="40"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="LegacyInstanceContext">
<Description>
If true then pass %this as first argument of all instance methods</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="41"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Manifest">
<Description>
Array of items projected with this class which need to be included in any deployment package we create from this class</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="42"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="MemberSuper">
<Description>
This is the class to inherit if this class is used as a member class in member inheritance</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="43"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ModificationAuxiliary">
<Description>
Deprecated.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="44"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ModificationLevel">
<Description>
Deprecated.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="45"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Modified">
<Description>
If set to 0 then class is always modified, and so it is always saved.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="46"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Name">
<Description>
The name of the class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="47"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="NoContext">
<Description>
NoContext</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="48"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="NoExtent">
<Description>
If TRUE will prevent this class from instantiating a persistent extent.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="49"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="OdbcType">
<Description>
In the case of a datatype class, specifies the type used when exposed via ODBC or JDBC. Datatype classes must specify an ODBC type. </Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="50"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="OldHash">
<Description>
Keep track of old hash values so we can modify a class without marking it as out of date.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="51"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Owner">
<Description>
Specifies the owner of the class and its corresponding table. By default, classes and tables are owned by _SYSTEM.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="52"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="PrimarySuper">
<Description>
PrimarySuper</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="53"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ProcedureBlock">
<Description>
Specifies that the class uses procedure block for method code.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="54"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Procedures">
<Description>
Procedures</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="55"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ProjectionClass">
<Description>
Additional projection member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="56"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="PropertyClass">
<Description>
Additional property member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="57"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="QueryClass">
<Description>
Additional query member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="58"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="RandomSig">
<Description>
Random value that is updated each time the class is compiled</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="59"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="RoutineCount">
<Description>
RoutineCount</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="60"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Routines">
<Description>
Routines</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="61"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ServerOnly">
<Description>
ServerOnly</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="62"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SlotCount">
<Description>
SlotCount</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="63"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SoapBindingStyle">
<Description>
Specifies the SOAP Binding used by this class when it is used to send and receive mnessages via SOAP.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="64"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SoapBodyUse">
<Description>
Specifies the encoding used for SOAP messages.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="65"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlCategory">
<Description>
In the case of a datatype class, specifies a type to use for calculations in SQL. Datatype classes must specify an SQL Category.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="66"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlQualifiedNameQ">
<Description>
SqlQualifiedNameQ</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="67"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlRoutinePrefix">
<Description>
Deprecated.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="68"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlRowIdName">
<Description>
In the case of a persistent class, specifies an altername field name used for the ID column. By default the ID is called ID.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="69"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlRowIdPrivate">
<Description>
In the case of a persistent class, specifies whether the ID column is projected to ODBC as a hidden field.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="70"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlSchemaName">
<Description>
SqlSchemaName</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="71"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="SqlTableName">
<Description>
In the case of a persistent class, specifies the table name used to identify the class in its SQL projection. By default, the SQL table name is the same as the class name.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="72"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="StorageStrategy">
<Description>
Specifies the name of the storage strategy used to control persistence for this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="73"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Structure">
<Description><![CDATA[
Hash of class &#39;structure&#39; so we can detect when SQL related classes need to be recompiled.]]></Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="74"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Super">
<Description>
Specifies one or more superclasses for the class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="75"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="System">
<Description>
Specifies that the class is internal to the implementation of Cache. Users should not mark their classes with this keyword.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="76"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Tables">
<Description>
Tables</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="77"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="TimeChanged">
<Description>
Gives the time the last change was made to the class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="78"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="TimeCreated">
<Description>
Gives the time the class was first created.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="79"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="TriggerClass">
<Description>
Additional trigger member super classes to inherit.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="80"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="ViewQuery">
<Description>
Gives the SQL query used for View definition of this class.</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="81"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="Views">
<Description>
Views</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="82"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Property name="XMLData">
<Description>
XMLData</Description>
<Type>%Library.String</Type>
<Parameter name="MVATTRIBUTE" value="83"/>
<Parameter name="MVJUSTIFICATION" value="L"/>
<Parameter name="MVPROJECTED" value="1"/>
<Parameter name="MVWIDTH" value="35"/>
</Property>

<Index name="indexClassId">
<IdKey>1</IdKey>
<PrimaryKey>1</PrimaryKey>
<Properties>classId</Properties>
</Index>

<Method name="methods">
<ClassMethod>1</ClassMethod>
<FormalSpec>id=""</FormalSpec>
<ReturnType>EasyCSP.Core.HashArray</ReturnType>
<Implementation><![CDATA[
    quit:$get(id)="" ""
    
    set def = ##class(%Dictionary.CompiledClass).%OpenId(id)
    quit:'$isobject(def) ""
    
    set rtn = ##class(EasyCSP.Core.HashArray).%New()
    
    set idx = def.Methods.Next()
    while idx '= "" {
        set method = def.Methods.GetAt(idx)
        if 'method.Private & ($e(method.Name, 1, 1) '= "%") & (method.Origin '= "") {
            set row = ##class(EasyCSP.Core.HashArray).%New()
            do row.set("isClassMethod", method.ClassMethod)
            do row.set("description", method.Description)
            do row.set("formalSpec", $replace(method.FormalSpec, ":", " As "))
            do row.set("origin", method.Origin)
            do row.set("returnType", method.ReturnType)
            do rtn.set(method.Name, row)
        }
        set idx = def.Methods.Next(idx)
    }
    
    quit rtn
]]></Implementation>
</Method>

<Method name="populateDocs">
<ClassMethod>1</ClassMethod>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    // Start by clearing out all the existing entries
    
    set queryId = "Doc_Repopulate"
    set sql = "DELETE FROM "_..getSQLTableName()_" WHERE ID <> ''"
    
    set query = ##class(%SQL.Statement).%New()
    set qStatus = query.%Prepare(sql)
    
    if qStatus '= 1 {
        set sqlError = $SYSTEM.Status.GetErrorText(qStatus)
        set ^queryOut(queryId,"status") = "Could not prepare SQL statement. Statement was: "_sql_" -- Error was: "_sqlError
        set ^queryOut(queryId, "process_end") = $now()
        quit ""
    }
    
    set recordSet = query.%Execute()
    
    set sql = "SELECT * FROM %Dictionary.CompiledClass WHERE ID LIKE 'EasyCSP.%'"
    
    set query = ##class(%SQL.Statement).%New()
    set qStatus = query.%Prepare(sql)
    
    if qStatus '= 1 {
        set sqlError = $SYSTEM.Status.GetErrorText(qStatus)
        set ^queryOut(queryId,"status") = "Could not prepare SQL statement. Statement was: "_sql_" -- Error was: "_sqlError
        set ^queryOut(queryId, "process_end") = $now()
        quit ""
    }
    
    set recordSet = query.%Execute()
    set colCount = query.%Metadata.columnCount
    set colNames = ##class(EasyCSP.Core.HashArray).%New()
    
    for idx = 1:1:colCount {
        set sqlStatementCol = query.%Metadata.columns.GetAt(idx)
        do colNames.set(idx, sqlStatementCol.colName)
        
    }
    
    while recordSet.%Next() {
        set model = ..objectFactory("Documentation", "model")
        set data = ##class(EasyCSP.Core.HashArray).%New()
        set idx = colNames.Next()
        while idx '= "" {
            do data.set(colNames.get(idx), recordSet.%Get(colNames.get(idx)))
            set idx = colNames.Next(idx)
        }
        
        do model.loadFromArray(data)
        do model.setAttributeValue("documentation_classid", recordSet.%Get("ID"))
        set model.recordId = recordSet.%Get("ID")
        
        do model.save()
    }
    
    quit 1
]]></Implementation>
</Method>

<Method name="properties">
<ClassMethod>1</ClassMethod>
<FormalSpec>id=""</FormalSpec>
<ReturnType>EasyCSP.Core.HashArray</ReturnType>
<Implementation><![CDATA[
    quit:$get(id)="" ""
    
    set def = ##class(%Dictionary.CompiledClass).%OpenId(id)
    quit:'$isobject(def) ""
    
    set rtn = ##class(EasyCSP.Core.HashArray).%New()
    
    set idx = def.Properties.Next()
    while idx '= "" {
        set property = def.Properties.GetAt(idx)
        if 'property.Private & 'property.Internal & ($e(property.Name, 1, 1) '= "%") & (property.Origin '= "") {
            set row = ##class(EasyCSP.Core.HashArray).%New()
            do row.set("description", property.Description)
            do row.set("final", property.Final)
            do row.set("readOnly", property.ReadOnly)
            do row.set("initialExpression", property.InitialExpression)
            
            set parameters = ##class(EasyCSP.Core.HashArray).%New()
            set jdx = def.Parameters.Next()
            while jdx '= "" {
                set parameter = def.Parameters.GetAt(jdx)
                do parameters.set("description", parameter.Description)
                do parameters.set("final", parameter.Final)
                do parameters.set("expression", parameter.Expression)
                do parameters.set("origin", parameter.Origin)
                set jdx = def.Parameters.Next(jdx)
            }
            do row.set("parameters", parameters)
            do rtn.set(property.Name, row)
        }
        set idx = def.Properties.Next(idx)
    }
    
    quit rtn
]]></Implementation>
</Method>

<Method name="search">
<Description>
Override the default (non-functioning) search() method. Each model should set the rules
for who can access what in the database.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>parameters:EasyCSP.Core.HashArray=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
    set:$get(parameters)="" parameters = ##class(EasyCSP.Core.HashArray).%New()
    do parameters.set("model", "Documentation")
    set query = ##class(EasyCSP.SQL.Query).%New(parameters)
    do query.run()
    quit query.id
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DOCUMENTATION</DataLocation>
<DefaultData>DocumentationDefaultData</DefaultData>
<IdLocation>^C.DOCUMENTATION</IdLocation>
<IndexLocation>^I.DOCUMENTATION</IndexLocation>
<StreamLocation>^S.DOCUMENTATION</StreamLocation>
<Data name="DocumentationDefaultData">
<Value name="1">
<Value>Abstract</Value>
</Value>
<Value name="2">
<Value>Ancestry</Value>
</Value>
<Value name="3">
<Value>CacheVersion</Value>
</Value>
<Value name="4">
<Value>ClassCompileError</Value>
</Value>
<Value name="5">
<Value>ClassDefinitionError</Value>
</Value>
<Value name="6">
<Value>ClassType</Value>
</Value>
<Value name="7">
<Value>Classes</Value>
</Value>
<Value name="8">
<Value>ClientDataType</Value>
</Value>
<Value name="9">
<Value>ClientDataTypeEnum</Value>
</Value>
<Value name="10">
<Value>ClientInfo</Value>
</Value>
<Value name="11">
<Value>ClientName</Value>
</Value>
<Value name="12">
<Value>CompilationSignature</Value>
</Value>
<Value name="13">
<Value>CompileAfter</Value>
</Value>
<Value name="14">
<Value>CompileNamespace</Value>
</Value>
<Value name="15">
<Value>ConstraintClass</Value>
</Value>
<Value name="16">
<Value>DdlAllowed</Value>
</Value>
<Value name="17">
<Value>DependsOn</Value>
</Value>
<Value name="18">
<Value>Deployed</Value>
</Value>
<Value name="19">
<Value>Description</Value>
</Value>
<Value name="20">
<Value>DisableIncremental</Value>
</Value>
<Value name="21">
<Value>Dynamic</Value>
</Value>
<Value name="22">
<Value>EmbeddedClass</Value>
</Value>
<Value name="23">
<Value>Extents</Value>
</Value>
<Value name="24">
<Value>Final</Value>
</Value>
<Value name="25">
<Value>GeneratedBy</Value>
</Value>
<Value name="26">
<Value>HasCPP</Value>
</Value>
<Value name="27">
<Value>Hash</Value>
</Value>
<Value name="28">
<Value>Hidden</Value>
</Value>
<Value name="29">
<Value>Import</Value>
</Value>
<Value name="30">
<Value>Importall</Value>
</Value>
<Value name="31">
<Value>IncludeCode</Value>
</Value>
<Value name="32">
<Value>IncludeCodeAll</Value>
</Value>
<Value name="33">
<Value>IncludeGenerator</Value>
</Value>
<Value name="34">
<Value>IncludeMGenAll</Value>
</Value>
<Value name="35">
<Value>IndexClass</Value>
</Value>
<Value name="36">
<Value>Inheritance</Value>
</Value>
<Value name="37">
<Value>InitialValue</Value>
</Value>
<Value name="38">
<Value>KeywordError</Value>
</Value>
<Value name="39">
<Value>KeywordModified</Value>
</Value>
<Value name="40">
<Value>Language</Value>
</Value>
<Value name="41">
<Value>LegacyInstanceContext</Value>
</Value>
<Value name="42">
<Value>Manifest</Value>
</Value>
<Value name="43">
<Value>MemberSuper</Value>
</Value>
<Value name="44">
<Value>ModificationAuxiliary</Value>
</Value>
<Value name="45">
<Value>ModificationLevel</Value>
</Value>
<Value name="46">
<Value>Modified</Value>
</Value>
<Value name="47">
<Value>Name</Value>
</Value>
<Value name="48">
<Value>NoContext</Value>
</Value>
<Value name="49">
<Value>NoExtent</Value>
</Value>
<Value name="50">
<Value>OdbcType</Value>
</Value>
<Value name="51">
<Value>OldHash</Value>
</Value>
<Value name="52">
<Value>Owner</Value>
</Value>
<Value name="53">
<Value>PrimarySuper</Value>
</Value>
<Value name="54">
<Value>ProcedureBlock</Value>
</Value>
<Value name="55">
<Value>Procedures</Value>
</Value>
<Value name="56">
<Value>ProjectionClass</Value>
</Value>
<Value name="57">
<Value>PropertyClass</Value>
</Value>
<Value name="58">
<Value>QueryClass</Value>
</Value>
<Value name="59">
<Value>RandomSig</Value>
</Value>
<Value name="60">
<Value>RoutineCount</Value>
</Value>
<Value name="61">
<Value>Routines</Value>
</Value>
<Value name="62">
<Value>ServerOnly</Value>
</Value>
<Value name="63">
<Value>SlotCount</Value>
</Value>
<Value name="64">
<Value>SoapBindingStyle</Value>
</Value>
<Value name="65">
<Value>SoapBodyUse</Value>
</Value>
<Value name="66">
<Value>SqlCategory</Value>
</Value>
<Value name="67">
<Value>SqlQualifiedNameQ</Value>
</Value>
<Value name="68">
<Value>SqlRoutinePrefix</Value>
</Value>
<Value name="69">
<Value>SqlRowIdName</Value>
</Value>
<Value name="70">
<Value>SqlRowIdPrivate</Value>
</Value>
<Value name="71">
<Value>SqlSchemaName</Value>
</Value>
<Value name="72">
<Value>SqlTableName</Value>
</Value>
<Value name="73">
<Value>StorageStrategy</Value>
</Value>
<Value name="74">
<Value>Structure</Value>
</Value>
<Value name="75">
<Value>Super</Value>
</Value>
<Value name="76">
<Value>System</Value>
</Value>
<Value name="77">
<Value>Tables</Value>
</Value>
<Value name="78">
<Value>TimeChanged</Value>
</Value>
<Value name="79">
<Value>TimeCreated</Value>
</Value>
<Value name="80">
<Value>TriggerClass</Value>
</Value>
<Value name="81">
<Value>ViewQuery</Value>
</Value>
<Value name="82">
<Value>Views</Value>
</Value>
<Value name="83">
<Value>XMLData</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
