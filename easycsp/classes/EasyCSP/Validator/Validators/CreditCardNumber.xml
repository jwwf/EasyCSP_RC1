<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Red Hat Enterprise Linux for x86-64) 2015.2.2 (Build 805U)" ts="2016-08-25 17:25:28">
<Class name="EasyCSP.Validator.Validators.CreditCardNumber">
<Description>
Implements the Luhn algorithm to determine whether the card number entered
is a valid sequence</Description>
<Super>EasyCSP.Validator.Base</Super>
<TimeChanged>64127,32061.203926</TimeChanged>
<TimeCreated>63595,34577.011722</TimeCreated>

<Method name="run">
<Description>
takes the form field value and returns true on valid number</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>parameters:EasyCSP.Core.HashArray=""</FormalSpec>
<ReturnType>EasyCSP.Model.attribute</ReturnType>
<Implementation><![CDATA[
    set attribute = ..init(parameters)
    quit:attribute.hasErrors() attribute
    
    set valueIn = attribute.value
    quit:valueIn="" attribute ; * "Required" will catch absence if this field is required.
    
    // accept only digits
    set (value,saveValue) = $mvoconv(valueIn, "MCN") ; only operate on digits
    if value = "" quit attribute
    
    set cardLength = $length(value)
    set cardCheck = cardLength # 2
    
    set combineTotal = 0, cur = 0
    
    for idx = 1:1:cardLength {
        set digit = $extract(value,idx)
        // multiply alternate digits by two
        if (cur # 2) = cardCheck {
            // if the multiplied digits' sum is greater than 9 then subtract 9
            set digit = digit *2
            set:digit>9 digit = digit - 9
        }
        set combineTotal = combineTotal + digit
        set cur = cur + 1
    }
    
    quit:(combineTotal#10)=0 attribute
    
    do attribute.addError("The value entered is not a valid credit card number.")
    
    quit attribute
]]></Implementation>
</Method>
</Class>
</Export>
